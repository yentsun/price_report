// Generated by CoffeeScript 1.10.0
(function() {
  var moment, uuid, validator;

  validator = require('validator');

  moment = require('moment');

  uuid = require('uuid');

  module.exports = function(seneca, options) {
    var cmd_register;
    cmd_register = function(args, respond) {
      var error, error1, merchant_id, price_value, product_title, reporter_id, sku, url;
      try {
        price_value = validator.toFloat(args.price_value);
        if (!validator.isFloat(price_value)) {
          throw new Error('price value not valid');
        }
        product_title = validator.trim(args.product_title);
        if (!product_title) {
          throw new Error('product title is invalid');
        }
        merchant_id = validator.trim(args.merchant_id);
        if (!merchant_id) {
          throw new Error('merchant_id is invalid');
        }
        reporter_id = validator.trim(args.reporter_id);
        if (!reporter_id) {
          throw new Error('reporter_id is invalid');
        }
        url = validator.trim(args.url);
        if (!url) {
          throw new Error('url is invalid');
        }
        sku = validator.trim(args.sku);
      } catch (error1) {
        error = error1;
        seneca.log.error('new report failed:', error.message);
        respond(error, null);
      }
      return seneca.make('price_report', {
        uuid: uuid.v4(),
        price_value: price_value,
        product_title: product_title,
        merchant_id: merchant_id,
        reporter_id: reporter_id,
        url: url,
        sku: sku,
        date_time: moment().format()
      }).save$(function(error, saved_report) {
        return respond(error, saved_report);
      });
    };
    return cmd_register;
  };

}).call(this);

//# sourceMappingURL=register.js.map
